<?xml version="1.0"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

-->

<document>
    <properties>
        <author email="marco at apache dot org">Marco Vassura</author>
        <title>Log4php - Quick Setup Guide</title>
    </properties>
    <meta name="keywords" content="php, java, logging, tracing, component, framework, API, log4php"/>
    <body>
        <section name="Quick Setup Guide">
            <subsection name="The package tree">
                <p>After unpacking the distribution file the following source tree will be created:</p>
                <pre>
log4php-{version}
    +---docs
    |   +---api
    |   qsg.html (this file)
    |       ...
    \---src
        +---log4php
        |   +---appenders
        |   +---config
        |   +---helpers
        |   +---layouts
        |   +---or
        |   +---spi
        |   +---varia
        |   \---xml
        \---tests
            ...
                </pre>
            </subsection>
            
            <subsection name="Installation">
                <p>
                    Copy the "<code>log4php-{version}/src/log4php</code>" directory in a place accessible by PHP 
                    (called in this document <code>{LOG4PHP-ROOT}</code>)
                    and  that's all! Log4php is installed. 
                    Optionally the <a href="apidocs/log4php/_LoggerManager.php.html#defineLOG4PHP_DIR">LOG4PHP_DIR</a> 
                    constant can be defined to point to <code>{LOG4PHP-ROOT}</code>.
                </p>
            </subsection>
            
            <subsection name="How to use">
                <p>
                    Three steps are required to use log4php:
                </p>
                <ol>
                    <li>
                        Create a configuration file (can be an ".ini"-type or xml file)
                        that will configure the log4php loggers hierarchy tree.<br/>
                        See the <code>tests/*/configs</code> directories for examples.<br/>
                        See <code>log4php.dtd</code> for xml elements reference.<br/>
                        Finally, take a look at the original log4j manual for more examples.
                    </li>
                    <li>
                        (Optional) Define the <a href="apidocs/log4php/_LoggerManager.php.html#defineLOG4PHP_CONFIGURATION"><code>LOG4PHP_CONFIGURATION</code></a> 
                        constant to point to the configuration above. 
                    </li>
                    <li>
                        (Optional) Define the <a href="apidocs/log4php/_LoggerManager.php.html#defineLOG4PHP_CONFIGURATOR_CLASS"><code>LOG4PHP_CONFIGURATOR_CLASS</code></a>
                        constant to point to a configuration class file.
                    </li>
                    <li>
                        Include the '<a href="apidocs/log4php/LoggerManager.html"><code>LoggerManager.php</code></a>' 
                        class file in your php scripts.
                    </li>
                </ol>
                <p>
                    Once the '<a href="apidocs/log4php/LoggerManager.html">LoggerManager</a>' is included,
                    it will start the <a href="apidocs/log4php/_LoggerManager.php.html#functionLoggerManagerDefaultInit">default init procedure</a> 
                    that can be parameterized by the previously defined 
                    <a href="apidocs/log4php/_LoggerManager.php.html#defineLOG4PHP_DEFAULT_INIT_OVERRIDE"><code>LOG4PHP_DEFAULT_INIT_OVERRIDE</code></a>, 
                    <a href="apidocs/log4php/_LoggerManager.php.html#defineLOG4PHP_CONFIGURATION"><code>LOG4PHP_CONFIGURATION</code></a> and 
                    <a href="apidocs/log4php/_LoggerManager.php.html#defineLOG4PHP_CONFIGURATOR_CLASS"><code>LOG4PHP_CONFIGURATOR_CLASS</code></a>
                    constants.
                </p>
                <p>Here is how to use <code>log4php</code> in user PHP code:</p>
                <pre>
&lt;?php
/*
    Set LOG4PHP_* constants here 
*/

require_once(LOG4PHP_DIR . '/LoggerManager.php');

/*
    In a class
*/
class Log4phpTest {
    /*
        Your public and private vars
    */
    var $_logger;
    
    function Log4phpTest()
    {
        $this-&gt;_logger =&amp; LoggerManager::getLogger('Log4phpTest');
        $this-&gt;_logger-&gt;debug('Hello!');
    }

}

function Log4phpTestFunction()
{
    $logger =&amp; LoggerManager::getLogger('Log4phpTestFunction');
    $logger-&gt;debug('Hello again!');    
}

/*
    Your PHP code
*/

//Safely close all appenders with...

LoggerManager::shutdown();

?&gt;
                </pre>
            </subsection>
        </section>
    </body>
</document>
